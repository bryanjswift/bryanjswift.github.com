#!/usr/bin/env ruby

###
# editpost -- edit an existing post
# Updates the date in the file and opens it in iAWriter.app
# Change blog_dir and editor to customize
#
# Based on a script by Jon Canady (https://github.com/joncanady/joncanady.com)
# Covered by the WTFPL: http://sam.zoy.org/wtfpl/
###

# omit the trailing slash, please
blog_dir = "/Users/bryanjswift/Work/bryanjswift.github.com"
# passed to open -a
editor = "/Applications/Byword.app"

require 'optparse'

options = { draft: false, publish: false, format: :markdown, categories: [] }

optparse = OptionParser.new do |opts|

  # banner
  opts.banner = "Usage: editpost relative/path/to/YYYY-MM-DD-post.format"

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end

  opts.on('-d', '--draft', 'Keep post as a draft') do
    options[:draft] = true
  end

  opts.on('-p', '--publish', 'Publish post') do
    options[:publish] = true
  end

  opts.on('-f', '--format FORMAT', [:markdown, :textile], 'Post is in [markdown|textile] (default markdown)') do |format|
    options[:format] = format
  end

  # Would be nice to have an option to leave a post as draft
  # If not leaving as draft move it to the appropriate directory (_posts or journal/_posts)
  # Need an option for a journal entry
  # Should also change file name if the date is different (it probably is)

end

begin
  optparse.parse!
rescue OptionParser::InvalidOption => e
  puts e
  puts o
  exit 1
end

if ARGV[0].nil?
  optparse.display
  exit 1
end

file = ARGV[0]

now = Time.now
current_time = "date: #{now.strftime("%Y-%m-%d %H:%M:%S")}"
date_prefix = now.strftime("%Y-%m-%d")

puts "Updating date to #{current_time}"

# Read post information
post = "#{file}"
text = File.read(post)
published = !options[:draft] || options[:publish] || text.match(/published: true/)

postname = post.match(/^.*\/([^\/]*)\.(md|markdown|textile)$/)[1]
if postname.match(/\d{4}-\d{2}-\d{2}/)
  postname = postname.gsub(/\d{4}-\d{2}-\d{2}/, date_prefix)
elsif published
  postname = "#{date_prefix}-#{postname}"
end

# Update post meta data
text = text.gsub(/date: \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}/, current_time)
text = text.gsub(/published: (false|true)/, "published: #{published}")

post_dir = '_drafts'
if options[:draft]
  post_dir = '_drafts'
elsif published
  post_dir = '_posts'
end

new_post = "#{blog_dir}/#{post_dir}/#{postname}.#{options[:format]}"

File.delete(post)
File.open(new_post, 'w') do |f|
  f << text
end

puts "Opening post..."
system("open", "-a#{editor}", new_post)
exit 0
